name: Release

on:
  push:
    branches:
      - main
      - dev
#on:
#  workflow_call:
#    inputs:
#      tag:
#        required: true
#        type: string

jobs:
  release:
    runs-on: ubuntu-22.04
    name: Nightly Release
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: npm install

      - name: Compile
        run: |
          npm i -g @vercel/ncc
          ncc build index.js --license licenses.txt

      - name: Configure git
        run : |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Compose Release Tag
        id: tags
        run: |
          if [[ ${{ github.event_name }} == "pull_request" ]]; then
            SHA=${{ github.event.pull_request.head.sha }}
          else
            SHA=$(echo "$GITHUB_CONTEXT" | jq '.event.commits[].id' | tail -2 | head -1 | sed 's/\"//g')
          fi
          
          DATE=$(git show -s --format=%ad --date=format:'%Y%m%d' $SHA)
          DEV_TAG=dev-$DATE-${SHA::7}
          
          BASE_RELEASE_TAG="v0."
          REPO=$(echo "$GITHUB_CONTEXT" | jq -r '.repository')
          LATEST_RELEASE=$(jq -r '.[0] | .tag_name' <<< $(curl --silent https://api.github.com/repos/$REPO/releases))
          if [ -n "$LATEST_RELEASE" ]; then
            # if latest release tag is v0.1, this extracts the `1` from it then increments it.
            VER="${LATEST_RELEASE#*.}"
            VER=$((VER + 1))
          else
            VER="1"
          fi
          
          RELEASE_TAG=v0.$VER
          
          echo "SHA: $SHA"
          echo "DEV_TAG: $DEV_TAG"
          echo "RELEASE_TAG: $RELEASE_TAG"
          echo "SHA=$SHA" >> $GITHUB_OUTPUT
          echo "DEV_TAG=$DEV_TAG" >> $GITHUB_OUTPUT
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_OUTPUT

      - name: Publish Dev Tag
        if: github.ref == 'refs/heads/dev'
        run: |
          BRANCH="dev-nightly-release"
          git switch -C $BRANCH
          git add --force dist/*
          git commit -m "Add compiled js file [Invoker ${{ steps.tags.outputs.SHA }}]."
          git tag -a -m ${{ steps.tags.outputs.DEV_TAG }} ${{ steps.tags.outputs.DEV_TAG }}
          git push --set-upstream origin $BRANCH --force --follow-tags

      - name: Release
        if: github.ref == 'refs/heads/dev'
        id: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=${{ steps.tags.outputs.RELEASE_TAG }}
          gh api repos/$REPO/git/refs -f ref="refs/tags/$TAG" -f sha="$SHA"
          gh release create $TAG --repo "$REPO" --title "Release $TAG" --generate-notes
#          TAG=${{ steps.release_tag.outputs.TAG }}
#          SHA=
#
#          # git tag -a ${{ steps.release_tag.outputs.TAG }}
#          # git push --follow-tags
#

